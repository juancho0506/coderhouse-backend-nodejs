paths:
  /api/users/:
    get:
      summary: Obtiene todos los datos disponibles de los usuarios en la aplicación
      tags:
        - Users
      responses:
        "200":
          description: La operación fue exitosa! Retorna un arreglo de usuarios.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#components/schemas/User'
        "500":
          description: Ocurrio un error interno no esperado.
  /api/users/:uid:
    get:
      summary: Obtiene la información de un usuario en la aplicación dada la id del mismo.
      tags:
        - Users
      parameters:
        - name: uid 
          in: path
          required: true
          description: La id del usuario en BD.
          schema:
            $type: string
            example: 647fa8c9e46dbc5a20320181
            
      responses:
        "200":
          description: La operación fue exitosa! Retorna un objeto de tipo usuario.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "500":
          description: Ocurrio un error interno no esperado.
components:
  schemas:
    User: 
      type: object
      properties:
        _id: 
          type: ObjectId
          description: Id autogenerado de MongoDB.
        first_name: 
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        password:
          type: String
          description: Contraseña del usuario
      example: 
        _id: ObjectId("647fa8c9e46dbc5a20320181")
        first_name: Usuario de prueba 1
        last_name: Apellido de prueba 1
        email: correodeprueba1@gmail.com
        password: 123456